
name: Build, Test, Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  deploy:
    needs: build
    if: github.repository_owner == 'belcurv' && ((github.event.pull_request.head.repo.full_name == github.repository) || (github.event_name == 'push'))
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
    - name: start deployment
      uses: bobheadxi/deployments@v1
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: ${{ fromJSON('["Production", "Preview"]')[github.ref != 'refs/heads/main'] }}

    - uses: actions/checkout@v3

    - uses: amondnet/vercel-action@v20.0.1
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: ${{ fromJSON('["--prod", ""]')[github.ref != 'refs/heads/main'] }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
        scope: ${{ secrets.VERCEL_ORG_ID}}
        working-directory: ./

    - name: update deployment status
      uses: bobheadxi/deployments@v1
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        env: ${{ steps.deployment.outputs.env }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
